
# ------------------------------------------------------------------------------

FindGene = function( hgtEventData, searchTerm )
{
  hasGene = sapply( 1:length( hgtEventData ), function(i) 
  {
    isGene = grepl(
      searchTerm, hgtEventData[[ i ]][[ GENE_ANNOTS ]], ignore.case = TRUE 
      )
    if ( !TRUE %in% isGene ) return( FALSE )
    gIdxs = which( isGene )
    for ( j in gIdxs )
      cat( 
        i, ": ", hgtEventData[[ i ]][[ HGT_GENES ]][j], ' ',
        hgtEventData[[ i ]][[ GENE_ANNOTS ]][j], '\n', sep = '' 
        )
    return( TRUE )
  })
  return( which( hasGene ) )
}

GetGenes = function( hgtEventData )
{
  geneIds = sapply( 1:length( hgtEventData ),
    function(i) list( hgtEventData[[ i ]][[ HGT_GENES ]] )
    )
  # for ( i in 1:length( hgtEventData ) )
  #   names( geneIds[[i]] ) = hgtEventData[[ i ]][[ GENE_ANNOTS ]]
  return( geneIds )  
}



MakeGeneMat = function( geneList )
{
  genes = unlist( geneList )
  
  geneMat = sapply( 1:length( geneList ),
    function(i) as.numeric( genes %in% geneList[[i]] )
    )
  # rownames( geneMat ) = names( genes )
  
  pheatmap::pheatmap(
    geneMat,
    cluster_rows = FALSE,
    cluster_cols = FALSE
    )
}

FindEventsWithGenes = function( hgtEventData, coreGenes )
{
  nEvents = length( hgtEventData )
  toTest  = seq( nEvents )
  hasGene = sapply( toTest, 
    function(i) TRUE %in% ( coreGenes %in% hgtEventData[[i]][[ HGT_GENES ]]  )
    )
  return( toTest[ hasGene ] )
}

clusts = 2004
gIdx = 9
LookUpGeneAnnot = function( gIdx, clusts )
{
  isClust = sapply( clusts, function(x) gfList[[ gIdx ]]$clustIdxs == x )
  clDescriptions = gfList[[ gIdx ]]$description[ isClust ]
  names( clDescriptions ) = gfList[[ gIdx ]]$featId[ isClust ]
  return( clDescriptions )
}

# ------------------------------------------------------------------------------

hitIdxs = FindGene( hgtEventData, "KorA")
geneList = GetGenes( hgtEventData )
MakeGeneMat( geneList )
boHgtEventData[2]

sapply( 1:length( hgtEventData ), 
  function(i) 1877 %in% hgtEventData[[i]][[HGT_GENES]]
  )

# ------------------------------------------------------------------------------

# Use "Bacteroides_ovatus_ATCC_8483" as the reference. Find the locus genes
# to check what is going on.
#
# Core genes at the KorAB locus: "TonB dependent receptor" and "ECF RNA 
# polymerase sigma factor SigK" gId 9 row idxs 1903 and 1905 ( 277, 13444 )
# 
# The HGT locus starts at 1872 with AarA ( clustIdx 11643 )
# 
# KorAB are found at 1877 and 1878 ( clustIdx 2494, 7994 )
# 
# The HGT locus ends at ResA ( clustIdx 7391 ) at 1913
coreGenes   = c( 277, 13444 )
locusBounds = 1872:1913
locusCls    = gfList[[9]]$clustIdxs[ locusBounds ]

# In total there are 42 genes

# ------------------------------------------------------------------------------

# Check another genome with the hgt event
gIdx     = 15
startPos = which( gfList[[ gIdx ]]$clustIdxs == 11643 )

qGenomeCls = sapply( locusCls, function(x)
{
  idx = which( gfList[[ gIdx ]]$clustIdxs == x )
  if ( length( idx ) == 0 ) return( NA )
  if ( length( idx ) == 1 ) return( idx )
  return( idx[ which.min( idx - startPos ) ] )
})
locusOrder = order( qGenomeCls )
!FALSE %in% sapply( 2:length(locusOrder),
  function(i) locusOrder[ i ] - locusOrder[ i - 1 ] == 1
  )
# The order is the same in  "Bovatus_CL02T12C04"!

endPos   = which( gfList[[ gIdx ]]$clustIdxs == 7391 )
length( gfList[[ gIdx ]]$clustIdxs[ startPos:endPos ] )

# ------------------------------------------------------------------------------

# Step 1:
s1Events = FindEventsWithGenes( hgtEventData, coreGenes )
hgtEventData = hgtEventData[ s1Events ]

# Genome 9 seed = 13444
hgtEventData[[ s1Events[23] ]][[3]]

# Genome 15 seed = 13444
hgtEventData[[ s1Events[25] ]][[3]]

# LookUpGeneAnnot
LookUpGeneAnnot( 9, 2004 )
LookUpGeneAnnot( 15, 15028 )
# ------------------------------------------------------------------------------

hgtClusts = 10316
cgHgtClusts = which( coreGeneClIdxs %in% hgtClusts )
gIdx = 17
gIdx = 16
gIdx = 7
n = length( hgtEventData[[1]][[3]] ) + 1


GetGenes = function( gIdx, clustIdxs, n )
{
  startPos = clustIdxs[ gIdx ] - n
  endPos   = clustIdxs[ gIdx ] + n  
  return( gfList[[ gIdx ]][ startPos:endPos, G_CLUST ] )
}


i = which( gfList[[ 16 ]][ , G_CLUST ] %in% c( 8923, 16309,  9805, 16952, 19660, 16310, 2789, 9145 ) )
gfList[[ 16 ]][ i, G_CLUST ]

j = which( gfList[[7]][ , G_CLUST ] %in% c( 16329, 1898, 1002, 8081, 9886, 13377, 5528, 19832, 18906, 16644,  5024,  7292 ) )
clustIdxs[7] - j
gfList[[7]][ j, G_CLUST ]
x17 = GetGenes( 17, clustIdxs, 12 )
y16 = GetGenes( 16, clustIdxs, 12 )
z7  = GetGenes( 7, clustIdxs, 12 )


# x16: 
# -- All Shared:    11767   270  9781 13609             
#                   11592  8145   299  3854  4827  8491  1239   996 
# -- HGT Core Gene: 10316 
# -- None at locus: 16329  1898  1002  8081  9886 13377  5528 19832 18906 16644  5024  7292
#  z7: 8923 16309  9805 16952 19660 16310  -- Insertion  
#      2789  9145                          -- Shared 13 genes down stream
#         -- All Shared: 11767   270  9781 13609                                                 
#      -- HGT Core gene: 10316                               
#                        5354 10424  5655  4096 12688 14356  1715 12416  1523  5939 11381 12654

# [[1]]
# [[1]][[1]]
# [1] 16 17
# 
# [[1]][[2]]
# [1] 10316
# 
# [[1]][[3]]
# [1]  1239   996 10316
# 
# [[1]][[4]]
#         10316
# Bo 0.13299409
# Bx 0.08617598
# 
# [[1]][[5]]
# [1] 1239  996
# 
# [[1]][[6]]
#    [,1] [,2]
# Bo    0    0
# Bx    0    0
# 
# [[1]][[7]]
# [1] 1239  996
# 
# [[1]][[8]]
# [1] "N%2CN'-diacetylchitobiase precursor"  "Exo-beta-D-glucosaminidase precursor"
# [3] "transcriptional activator FtrB" 

x = grep( "YlmA", gfList[[6]]$description)
gfList[[9]]$description[ x ]
i = which( 
  coreGeneClIdxs %in% gfList[[6]]$clustIdxs[ ( x - 13 ):( x + 45 ) ]
)

y = hgtClusts %in% gfList[[6]]$clustIdxs[ ( x - 13 ):( x + 45 ) ]
which( y  )
c = sapply( isMySpecies, function(x)
{
  if ( x ) return( "red4" )
  return( "darkblue" )
})
plot(
  jitter( refVals[ i, ] ),
  jitter( qryVals[ i, ] ),
  col = c,
  xlab = "Bx val",
  ylab = "Bo val",
  pch = 19
  )

gfList[[9]]$description[ x[i] ]
hgtClusts[i]

xylans = which( sapply( 1:length( hgtEventData ), 
  function(i) 1746 %in% hgtEventData[[i]][[2]]
  ))
hgtEventData = hgtEventData[ xylans ]
length( hgtEventData)
